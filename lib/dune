(* -*- tuareg -*- *)

let () = 
  Jbuild_plugin.V1.send @@
  String.concat "\n" [
"(library
 (name cuite)
 (public_name cuite)
 (wrapped false)
 (modules Cuite__alloc QFlags QModels Qt QVariant Cuite)
 (flags -w -32)
 (ocamlc_flags (-dllib libcuite))
 (c_library_flags (-lcuite)))

(library
 (name cuite_lwt)
 (public_name cuite-lwt)
 (wrapped false)
 (modules Cuite_lwt)
 (libraries cuite lwt.unix))

(rule
 (targets flags.hpp.gen)
 (action (with-stdout-to %{targets}
          (run %{exe:../gen/cflagsgen.bc} declaration))))

(rule
 (targets flags.cpp.gen)
 (action (with-stdout-to %{targets}
          (run %{exe:../gen/cflagsgen.bc} definition))))

(rule
 (targets slot.cpp.gen)
 (action (with-stdout-to %{targets}
          (run %{exe:../gen/cgen.bc}))))

(rule
 (targets cuite.ml)
 (action (with-stdout-to cuite.ml
          (run %{exe:../gen/mlgen.bc}))))

(rule
 (deps 
   ../cpp/cuite_gc.h
   ../cpp/cuite_csupport.h  ../cpp/cuite_csupport.c
   ../cpp/cuite_support.h   ../cpp/cuite_support.cpp
   ../cpp/cuite_models.cpp  ../cpp/cuite_select.cpp
   ../cpp/cuite_variant.h   ../cpp/cuite_variant.cpp
   ../cpp/cuite_wrappers.h  ../cpp/cuite_wrappers.cpp
   ../cpp/cuite_stubs.h     ../cpp/cuite_stubs.cpp
   flags.hpp.gen flags.cpp.gen slot.cpp.gen main.cpp
   Makefile.libcuite Makefile.libcuite.gen Makefile.libcuite.macos)
 (targets libcuite.so)"
;
begin
  match List.assoc "system" Jbuild_plugin.V1.ocamlc_config with
  | "macosx" -> 
    "(action (run %{make} -j4 -f Makefile.libcuite.macos %{targets}))"
  | _ -> "(action (run %{make} -j4 -f Makefile.libcuite %{targets}))"
end
;
")"
;
"(install
 (section lib)
 (files libcuite.so)
 (package cuite))"
]
